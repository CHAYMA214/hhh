{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed Aminne\\\\UpHabit\\\\src\\\\friend\\\\friends.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db } from \"../fireba/firebase\";\nimport { doc, getDoc, getDocs, collection, updateDoc } from \"firebase/firestore\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"./framework.css\";\nimport \"./master.css\";\nimport photo from \"./profile-user.png\";\nimport change from \"./cigarette.png\";\nimport setting from \"./settings.png\";\nimport multipe from \"./multiple-users-silhouette.png\";\nimport friend from \"./friends.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserList({\n  users,\n  onActionClick,\n  actionLabel,\n  actionClass\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"user-list\",\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"user-item d-flex align-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: \"10px\"\n        },\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${actionClass} c-white ml-10`,\n        onClick: () => onActionClick(user.id),\n        style: {\n          margin: \"5px\"\n        },\n        children: actionLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = UserList;\nexport default function Friend() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchUsers = async () => {\n    try {\n      const usersSnapshot = await getDocs(collection(db, \"users\"));\n      const userList = usersSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })).filter(user => user.id !== currentUser.uid);\n      setUsers(userList);\n    } catch (err) {\n      setError(\"Failed to fetch users.\");\n      console.error(err);\n    }\n  };\n  const fetchFriends = async () => {\n    try {\n      const userRef = doc(db, \"users\", currentUser.uid);\n      const userSnap = await getDoc(userRef);\n      if (userSnap.exists()) {\n        const friendIds = userSnap.data().friends || [];\n        const friendsData = await Promise.all(friendIds.map(async friendId => {\n          const friendDoc = await getDoc(doc(db, \"users\", friendId));\n          return {\n            id: friendId,\n            ...friendDoc.data()\n          };\n        }));\n        setFriends(friendsData);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch friends.\");\n      console.error(err);\n    }\n  };\n  const addFriend = async friendId => {\n    try {\n      const userRef = doc(db, \"users\", currentUser.uid);\n      const updatedFriends = [...new Set([...friends.map(f => f.id), friendId])];\n      await updateDoc(userRef, {\n        friends: updatedFriends\n      });\n      const friendDoc = await getDoc(doc(db, \"users\", friendId));\n      setFriends([...friends, {\n        id: friendId,\n        ...friendDoc.data()\n      }]);\n    } catch (err) {\n      setError(\"Failed to add friend.\");\n      console.error(err);\n    }\n  };\n  const removeFriend = async friendId => {\n    try {\n      const userRef = doc(db, \"users\", currentUser.uid);\n      const updatedFriends = friends.filter(friend => friend.id !== friendId).map(f => f.id);\n      await updateDoc(userRef, {\n        friends: updatedFriends\n      });\n      setFriends(friends.filter(friend => friend.id !== friendId));\n    } catch (err) {\n      setError(\"Failed to remove friend.\");\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n    fetchFriends();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page d-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar bg-white p-20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }, this), isFormVisible ? /*#__PURE__*/_jsxDEV(UserList, {\n        users: users.filter(u => !friends.some(f => f.id === u.id)),\n        onActionClick: addFriend,\n        actionLabel: \"Add Friend\",\n        actionClass: \"bg-blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn bg-blue c-white\",\n        onClick: () => setIsFormVisible(true),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        users: friends,\n        onActionClick: removeFriend,\n        actionLabel: \"Remove\",\n        actionClass: \"bg-red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Friend, \"RS27RgbaBk35DiYw3VytSyM63Ak=\", false, function () {\n  return [useAuth];\n});\n_c2 = Friend;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserList\");\n$RefreshReg$(_c2, \"Friend\");","map":{"version":3,"names":["React","useState","useEffect","Link","db","doc","getDoc","getDocs","collection","updateDoc","useAuth","photo","change","setting","multipe","friend","jsxDEV","_jsxDEV","UserList","users","onActionClick","actionLabel","actionClass","className","children","map","user","style","margin","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","Friend","_s","currentUser","setUsers","friends","setFriends","isFormVisible","setIsFormVisible","error","setError","fetchUsers","usersSnapshot","userList","docs","data","filter","uid","err","console","fetchFriends","userRef","userSnap","exists","friendIds","friendsData","Promise","all","friendId","friendDoc","addFriend","updatedFriends","Set","f","removeFriend","u","some","_c2","$RefreshReg$"],"sources":["C:/Users/Mohamed Aminne/UpHabit/src/friend/friends.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { db } from \"../fireba/firebase\";\r\nimport { doc, getDoc, getDocs, collection, updateDoc } from \"firebase/firestore\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"./framework.css\";\r\nimport \"./master.css\";\r\nimport photo from \"./profile-user.png\";\r\nimport change from \"./cigarette.png\";\r\nimport setting from \"./settings.png\";\r\nimport multipe from \"./multiple-users-silhouette.png\";\r\nimport friend from \"./friends.png\";\r\n\r\nfunction UserList({ users, onActionClick, actionLabel, actionClass }) {\r\n  return (\r\n    <ul className=\"user-list\">\r\n      {users.map((user) => (\r\n        <li key={user.id} className=\"user-item d-flex align-center\">\r\n          <span style={{ margin: \"10px\" }}>{user.name}</span>\r\n          <button\r\n            className={`btn ${actionClass} c-white ml-10`}\r\n            onClick={() => onActionClick(user.id)}\r\n            style={{ margin: \"5px\" }}\r\n          >\r\n            {actionLabel}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default function Friend() {\r\n  const { currentUser } = useAuth();\r\n  const [users, setUsers] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const usersSnapshot = await getDocs(collection(db, \"users\"));\r\n      const userList = usersSnapshot.docs\r\n        .map((doc) => ({ id: doc.id, ...doc.data() }))\r\n        .filter((user) => user.id !== currentUser.uid);\r\n      setUsers(userList);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch users.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchFriends = async () => {\r\n    try {\r\n      const userRef = doc(db, \"users\", currentUser.uid);\r\n      const userSnap = await getDoc(userRef);\r\n      if (userSnap.exists()) {\r\n        const friendIds = userSnap.data().friends || [];\r\n        const friendsData = await Promise.all(\r\n          friendIds.map(async (friendId) => {\r\n            const friendDoc = await getDoc(doc(db, \"users\", friendId));\r\n            return { id: friendId, ...friendDoc.data() };\r\n          })\r\n        );\r\n        setFriends(friendsData);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch friends.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const addFriend = async (friendId) => {\r\n    try {\r\n      const userRef = doc(db, \"users\", currentUser.uid);\r\n      const updatedFriends = [...new Set([...friends.map((f) => f.id), friendId])];\r\n      await updateDoc(userRef, { friends: updatedFriends });\r\n\r\n      const friendDoc = await getDoc(doc(db, \"users\", friendId));\r\n      setFriends([...friends, { id: friendId, ...friendDoc.data() }]);\r\n    } catch (err) {\r\n      setError(\"Failed to add friend.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const removeFriend = async (friendId) => {\r\n    try {\r\n      const userRef = doc(db, \"users\", currentUser.uid);\r\n      const updatedFriends = friends.filter((friend) => friend.id !== friendId).map((f) => f.id);\r\n      await updateDoc(userRef, { friends: updatedFriends });\r\n      setFriends(friends.filter((friend) => friend.id !== friendId));\r\n    } catch (err) {\r\n      setError(\"Failed to remove friend.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    fetchFriends();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page d-flex\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar bg-white p-20\">\r\n        {/* ...Sidebar Code */}\r\n      </div>\r\n      <div className=\"content w-full\">\r\n        <h1>Friends</h1>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        {isFormVisible ? (\r\n          <UserList\r\n            users={users.filter((u) => !friends.some((f) => f.id === u.id))}\r\n            onActionClick={addFriend}\r\n            actionLabel=\"Add Friend\"\r\n            actionClass=\"bg-blue\"\r\n          />\r\n        ) : (\r\n          <button className=\"btn bg-blue c-white\" onClick={() => setIsFormVisible(true)}>\r\n            +\r\n          </button>\r\n        )}\r\n\r\n        <h2>List of Friends</h2>\r\n        <UserList\r\n          users={friends}\r\n          onActionClick={removeFriend}\r\n          actionLabel=\"Remove\"\r\n          actionClass=\"bg-red\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}